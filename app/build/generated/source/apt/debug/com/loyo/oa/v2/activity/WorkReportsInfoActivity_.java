//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.loyo.oa.v2.activity;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import com.loyo.oa.v2.R.id;
import com.loyo.oa.v2.R.layout;
import com.loyo.oa.v2.beans.WorkReport;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class WorkReportsInfoActivity_
    extends WorkReportsInfoActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String M_WORK_REPORT_EXTRA = "workreport";
    public final static String M_ID_EXTRA = "id";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_workreports_info);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static WorkReportsInfoActivity_.IntentBuilder_ intent(Context context) {
        return new WorkReportsInfoActivity_.IntentBuilder_(context);
    }

    public static WorkReportsInfoActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new WorkReportsInfoActivity_.IntentBuilder_(fragment);
    }

    public static WorkReportsInfoActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new WorkReportsInfoActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        tv_ptoject = ((TextView) hasViews.findViewById(id.tv_ptoject));
        tv_crm = ((TextView) hasViews.findViewById(id.tv_crm));
        tv_workReport_time = ((TextView) hasViews.findViewById(id.tv_workReport_time));
        edt_workReport_title = ((EditText) hasViews.findViewById(id.edt_workReport_title));
        tv_visit_customers_num = ((TextView) hasViews.findViewById(id.tv_visit_customers_num));
        img_title_right = ((ViewGroup) hasViews.findViewById(id.img_title_right));
        tv_toUser = ((TextView) hasViews.findViewById(id.tv_toUser));
        edt_content = ((EditText) hasViews.findViewById(id.edt_content));
        tv_reviewer_ = ((TextView) hasViews.findViewById(id.tv_reviewer_));
        layout_content = ((ViewGroup) hasViews.findViewById(id.layout_content));
        tv_reviewer = ((TextView) hasViews.findViewById(id.tv_reviewer));
        layout_score = ((ViewGroup) hasViews.findViewById(id.layout_score));
        img_title_left = ((ViewGroup) hasViews.findViewById(id.img_title_left));
        webView_content = ((WebView) hasViews.findViewById(id.webView_content));
        tv_attachment_count = ((TextView) hasViews.findViewById(id.tv_attachment_count));
        tv_new_customers_num = ((TextView) hasViews.findViewById(id.tv_new_customers_num));
        ratingBar_workReport = ((RatingBar) hasViews.findViewById(id.ratingBar_workReport));
        btn_workreport_review = ((Button) hasViews.findViewById(id.btn_workreport_review));
        tv_discussion_count = ((TextView) hasViews.findViewById(id.tv_discussion_count));
        layout_discussion = ((ViewGroup) hasViews.findViewById(id.layout_discussion));
        tv_new_visit_num = ((TextView) hasViews.findViewById(id.tv_new_visit_num));
        img_workreport_status = ((ImageView) hasViews.findViewById(id.img_workreport_status));
        layout_attachment = ((ViewGroup) hasViews.findViewById(id.layout_attachment));
        if (img_title_left!= null) {
            img_title_left.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WorkReportsInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (img_title_right!= null) {
            img_title_right.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WorkReportsInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_workreport_review!= null) {
            btn_workreport_review.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WorkReportsInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_discussion!= null) {
            layout_discussion.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WorkReportsInfoActivity_.this.clickDiscussion();
                }

            }
            );
        }
        if (layout_attachment!= null) {
            layout_attachment.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WorkReportsInfoActivity_.this.clickAttachment();
                }

            }
            );
        }
        init();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(M_WORK_REPORT_EXTRA)) {
                mWorkReport = ((WorkReport) extras_.getSerializable(M_WORK_REPORT_EXTRA));
            }
            if (extras_.containsKey(M_ID_EXTRA)) {
                mId = extras_.getString(M_ID_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void showDiscussion() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                WorkReportsInfoActivity_.super.showDiscussion();
            }

        }
        );
    }

    @Override
    public void updateUI() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                WorkReportsInfoActivity_.super.updateUI();
            }

        }
        );
    }

    @Override
    public void getDiscussion() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    WorkReportsInfoActivity_.super.getDiscussion();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getData_WorkReport() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    WorkReportsInfoActivity_.super.getData_WorkReport();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<WorkReportsInfoActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, WorkReportsInfoActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), WorkReportsInfoActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), WorkReportsInfoActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
        }

        public WorkReportsInfoActivity_.IntentBuilder_ mWorkReport(WorkReport mWorkReport) {
            return super.extra(M_WORK_REPORT_EXTRA, ((Serializable) mWorkReport));
        }

        public WorkReportsInfoActivity_.IntentBuilder_ mId(String mId) {
            return super.extra(M_ID_EXTRA, mId);
        }

    }

}
