//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.loyo.oa.v2.activity;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import com.loyo.oa.v2.R.id;
import com.loyo.oa.v2.R.layout;
import com.loyo.oa.v2.beans.WfInstance;
import com.loyo.oa.v2.tool.customview.ListView_inScrollView;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class WfinstanceInfoActivity_
    extends WfinstanceInfoActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String WF_INSTANCE_EXTRA = "data";
    public final static String M_ID_EXTRA = "id";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_wfinstance_info);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static WfinstanceInfoActivity_.IntentBuilder_ intent(Context context) {
        return new WfinstanceInfoActivity_.IntentBuilder_(context);
    }

    public static WfinstanceInfoActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new WfinstanceInfoActivity_.IntentBuilder_(fragment);
    }

    public static WfinstanceInfoActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new WfinstanceInfoActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        listView_workflowNodes = ((ListView_inScrollView) hasViews.findViewById(id.listView_workflowNodes));
        img_title_right = ((ViewGroup) hasViews.findViewById(id.img_title_right));
        layout_memo = ((ViewGroup) hasViews.findViewById(id.layout_memo));
        tv_title_role = ((TextView) hasViews.findViewById(id.tv_title_role));
        tv_wfnodes_title = ((TextView) hasViews.findViewById(id.tv_wfnodes_title));
        layout_bottom = ((ViewGroup) hasViews.findViewById(id.layout_bottom));
        tv_attachment_count = ((TextView) hasViews.findViewById(id.tv_attachment_count));
        tv_time_creator = ((TextView) hasViews.findViewById(id.tv_time_creator));
        layout_lastwork = ((ViewGroup) hasViews.findViewById(id.layout_lastwork));
        tv_lastowrk = ((TextView) hasViews.findViewById(id.tv_lastowrk));
        img_title_left = ((ViewGroup) hasViews.findViewById(id.img_title_left));
        img_wfinstance_status = ((ImageView) hasViews.findViewById(id.img_wfinstance_status));
        tv_title_creator = ((TextView) hasViews.findViewById(id.tv_title_creator));
        tv_memo = ((TextView) hasViews.findViewById(id.tv_memo));
        layout_nopass = ((ViewGroup) hasViews.findViewById(id.layout_nopass));
        layout_AttachFile = ((ViewGroup) hasViews.findViewById(id.layout_AttachFile));
        layout_wfinstance_content = ((ViewGroup) hasViews.findViewById(id.layout_wfinstance_content));
        layout_pass = ((ViewGroup) hasViews.findViewById(id.layout_pass));
        listView_wfinstance = ((ListView) hasViews.findViewById(id.listView_wfinstance));
        if (img_title_left!= null) {
            img_title_left.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (img_title_right!= null) {
            img_title_right.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_nopass!= null) {
            layout_nopass.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_pass!= null) {
            layout_pass.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_lastwork!= null) {
            layout_lastwork.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_AttachFile!= null) {
            layout_AttachFile.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    WfinstanceInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        init();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(WF_INSTANCE_EXTRA)) {
                wfInstance = ((WfInstance) extras_.getSerializable(WF_INSTANCE_EXTRA));
            }
            if (extras_.containsKey(M_ID_EXTRA)) {
                mId = extras_.getString(M_ID_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<WfinstanceInfoActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, WfinstanceInfoActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), WfinstanceInfoActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), WfinstanceInfoActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
        }

        public WfinstanceInfoActivity_.IntentBuilder_ wfInstance(WfInstance wfInstance) {
            return super.extra(WF_INSTANCE_EXTRA, ((Serializable) wfInstance));
        }

        public WfinstanceInfoActivity_.IntentBuilder_ mId(String mId) {
            return super.extra(M_ID_EXTRA, mId);
        }

    }

}
