//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.loyo.oa.v2.activity;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.TextView;
import com.loyo.oa.v2.R.id;
import com.loyo.oa.v2.R.layout;
import com.loyo.oa.v2.beans.DayofAttendance;
import com.loyo.oa.v2.tool.customview.RoundImageView;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class PreviewAttendanceActivity_
    extends PreviewAttendanceActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String ATTENDANCE_EXTRA = "data";
    public final static String IN_OR_OUT_EXTRA = "inOrOut";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_attendance_info);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static PreviewAttendanceActivity_.IntentBuilder_ intent(Context context) {
        return new PreviewAttendanceActivity_.IntentBuilder_(context);
    }

    public static PreviewAttendanceActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new PreviewAttendanceActivity_.IntentBuilder_(fragment);
    }

    public static PreviewAttendanceActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new PreviewAttendanceActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        iv_avartar = ((RoundImageView) hasViews.findViewById(id.iv_avartar));
        tv_title = ((TextView) hasViews.findViewById(id.tv_title));
        gridView_photo = ((GridView) hasViews.findViewById(id.gridView_photo));
        tv_role = ((TextView) hasViews.findViewById(id.tv_role));
        iv_type = ((ImageView) hasViews.findViewById(id.iv_type));
        layout_back = ((ViewGroup) hasViews.findViewById(id.layout_back));
        btn_confirm = ((Button) hasViews.findViewById(id.btn_confirm));
        tv_info = ((TextView) hasViews.findViewById(id.tv_info));
        tv_reason = ((TextView) hasViews.findViewById(id.tv_reason));
        tv_name = ((TextView) hasViews.findViewById(id.tv_name));
        if (btn_confirm!= null) {
            btn_confirm.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    PreviewAttendanceActivity_.this.confirmFieldWork();
                }

            }
            );
        }
        if (layout_back!= null) {
            layout_back.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    PreviewAttendanceActivity_.this.back();
                }

            }
            );
        }
        initViews();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(ATTENDANCE_EXTRA)) {
                attendance = ((DayofAttendance) extras_.getSerializable(ATTENDANCE_EXTRA));
            }
            if (extras_.containsKey(IN_OR_OUT_EXTRA)) {
                inOrOut = extras_.getInt(IN_OR_OUT_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<PreviewAttendanceActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, PreviewAttendanceActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), PreviewAttendanceActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), PreviewAttendanceActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
        }

        public PreviewAttendanceActivity_.IntentBuilder_ attendance(DayofAttendance attendance) {
            return super.extra(ATTENDANCE_EXTRA, ((Serializable) attendance));
        }

        public PreviewAttendanceActivity_.IntentBuilder_ inOrOut(int inOrOut) {
            return super.extra(IN_OR_OUT_EXTRA, inOrOut);
        }

    }

}
