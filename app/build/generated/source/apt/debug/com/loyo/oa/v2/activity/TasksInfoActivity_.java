//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.loyo.oa.v2.activity;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.RatingBar;
import android.widget.TextView;
import com.loyo.oa.v2.R.id;
import com.loyo.oa.v2.R.layout;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class TasksInfoActivity_
    extends TasksInfoActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String M_TASK_EXTRA = "task";
    public final static String M_ID_EXTRA = "id";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_tasks_info);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static TasksInfoActivity_.IntentBuilder_ intent(Context context) {
        return new TasksInfoActivity_.IntentBuilder_(context);
    }

    public static TasksInfoActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new TasksInfoActivity_.IntentBuilder_(fragment);
    }

    public static TasksInfoActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new TasksInfoActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        tv_task_audit = ((TextView) hasViews.findViewById(id.tv_task_audit));
        tv_sub_title = ((TextView) hasViews.findViewById(id.tv_sub_title));
        tv_content = ((TextView) hasViews.findViewById(id.tv_content));
        tv_comment = ((TextView) hasViews.findViewById(id.tv_comment));
        tv_task_project = ((TextView) hasViews.findViewById(id.tv_task_project));
        layout_score = ((ViewGroup) hasViews.findViewById(id.layout_score));
        tv_reviewer = ((TextView) hasViews.findViewById(id.tv_reviewer));
        ratingBar_Task = ((RatingBar) hasViews.findViewById(id.ratingBar_Task));
        tv_children_info = ((TextView) hasViews.findViewById(id.tv_children_info));
        layout_child_add_action = ((ViewGroup) hasViews.findViewById(id.layout_child_add_action));
        tv_attachment_count = ((TextView) hasViews.findViewById(id.tv_attachment_count));
        tv_toUsers = ((TextView) hasViews.findViewById(id.tv_toUsers));
        tv_responsiblePerson = ((TextView) hasViews.findViewById(id.tv_responsiblePerson));
        btn_complete = ((Button) hasViews.findViewById(id.btn_complete));
        img_title_left = ((ViewGroup) hasViews.findViewById(id.img_title_left));
        img_title_right = ((ViewGroup) hasViews.findViewById(id.img_title_right));
        tv_remind = ((TextView) hasViews.findViewById(id.tv_remind));
        tv_discussion_count = ((TextView) hasViews.findViewById(id.tv_discussion_count));
        tv_task_title = ((TextView) hasViews.findViewById(id.tv_task_title));
        layout_child_Add_area = ((ViewGroup) hasViews.findViewById(id.layout_child_Add_area));
        layout_responsiblePerson = ((ViewGroup) hasViews.findViewById(id.layout_responsiblePerson));
        if (img_title_left!= null) {
            img_title_left.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    TasksInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (img_title_right!= null) {
            img_title_right.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    TasksInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_complete!= null) {
            btn_complete.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    TasksInfoActivity_.this.onClick(view);
                }

            }
            );
        }
        if (layout_child_add_action!= null) {
            layout_child_add_action.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    TasksInfoActivity_.this.openNewSubTask();
                }

            }
            );
        }
        {
            View view = hasViews.findViewById(id.layout_attachment);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TasksInfoActivity_.this.clickAttachment();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.tv_upload);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TasksInfoActivity_.this.openUpload();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.layout_discussion);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        TasksInfoActivity_.this.clickDiscussion();
                    }

                }
                );
            }
        }
        init();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(M_TASK_EXTRA)) {
                mTask = ((com.loyo.oa.v2.beans.Task) extras_.getSerializable(M_TASK_EXTRA));
            }
            if (extras_.containsKey(M_ID_EXTRA)) {
                mId = extras_.getString(M_ID_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  600 :
                TasksInfoActivity_.this.onNewSubTaskActivityResult(resultCode, data);
                break;
        }
    }

    @Override
    public void getDiscussion() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    TasksInfoActivity_.super.getDiscussion();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getTask() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    TasksInfoActivity_.super.getTask();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<TasksInfoActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, TasksInfoActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), TasksInfoActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), TasksInfoActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
        }

        public TasksInfoActivity_.IntentBuilder_ mTask(com.loyo.oa.v2.beans.Task mTask) {
            return super.extra(M_TASK_EXTRA, ((Serializable) mTask));
        }

        public TasksInfoActivity_.IntentBuilder_ mId(String mId) {
            return super.extra(M_ID_EXTRA, mId);
        }

    }

}
